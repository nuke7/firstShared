{"version":3,"sources":["components/Modal.jsx","components/GridList.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","borderRadius","boxShadow","shadows","padding","spacing","textAlign","Backdrop","TransitionModal","props","classes","data","id","Modal","disableEnforceFocus","aria-labelledby","aria-describedby","className","open","onClose","setOpen","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","show","image","src","medium","alt","style","width","margin","name","type","rating","average","language","genres","premiered","Button","startIcon","variant","onClick","page","url","window","root","maxWidth","minWidth","media","height","GridList","useState","setId","propsData","flexWrap","map","index","Card","CardActionArea","e","currentTarget","console","log","CardContent","flexDirection","Typography","gutterBottom","component","color","summary","replaceAll","App","setUrl","setData","search","setSearch","searchFn","useEffect","fetch","then","response","json","placeholder","onChange","target","value","onKeyPress","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b521e1.chunk.js","sourcesContent":["import Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n/* import { useState } from \"react\"; */\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    borderRadius: \"3px\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    textAlign: \"center\",\r\n  },\r\n  Backdrop: {\r\n    backgroundColor: \"rgba(60, 77, 49, .5)\",\r\n  },\r\n}));\r\n\r\nexport default function TransitionModal(props) {\r\n  const classes = useStyles();\r\n  /*  const [open, setOpen] = useState(props.open); */\r\n\r\n  /*   const handleOpen = () => {\r\n    setOpen(true);\r\n  }; */\r\n\r\n  const buttonClicked = (page) => {\r\n    window.open(page, \"_blank\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.data[props.id] && (\r\n        <Modal\r\n          disableEnforceFocus\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={props.open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n            className: classes.Backdrop,\r\n          }}>\r\n          <Fade in={props.open}>\r\n            <div className={classes.paper}>\r\n              {props.data[props.id].show.image ? (\r\n                <img\r\n                  src={`${props.data[props.id].show.image.medium}`}\r\n                  alt=\"cover art\"\r\n                  style={{ width: \"90%\", margin: \"auto\" }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={\"https://s3.amazonaws.com/FringeBucket/image_placeholder.png\"}\r\n                  alt=\"cover art\"\r\n                  style={{ width: \"90%\", margin: \"auto\" }}\r\n                />\r\n              )}\r\n              <h2 id=\"transition-modal-title\">\r\n                {props.data[props.id] ? `${props.data[props.id].show.name}` : \"no title\"}\r\n              </h2>\r\n              <h4 id=\"transition-modal-description\">\r\n                Type:{\" \"}\r\n                {props.data[props.id] ? `${props.data[props.id].show.type}` : \"no type\"}\r\n              </h4>\r\n              <h4>\r\n                {props.data[props.id]\r\n                  ? `Rating: ${props.data[props.id].show.rating.average}`\r\n                  : \"no rating\"}\r\n              </h4>\r\n              <h4>\r\n                {props.data[props.id]\r\n                  ? `Language: ${props.data[props.id].show.language}`\r\n                  : \"no language\"}\r\n              </h4>\r\n              <h4>\r\n                {props.data[props.id]\r\n                  ? `Genre: ${props.data[props.id].show.genres[0]}`\r\n                  : \"no genre\"}\r\n              </h4>\r\n              <h5>\r\n                {props.data[props.id]\r\n                  ? `Premiered: ${props.data[props.id].show.premiered}`\r\n                  : \"no premier date\"}\r\n              </h5>\r\n              <Button\r\n                startIcon={<TheatersIcon />}\r\n                variant=\"outlined\"\r\n                onClick={() => buttonClicked(`${props.data[props.id].show.url}`)}>\r\n                More\r\n              </Button>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n/* import CardMedia from \"@material-ui/core/CardMedia\"; */\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport TransitionModal from \"./Modal\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 300,\r\n    margin: \"1rem\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport function GridList(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [id, setId] = useState(0);\r\n  let propsData = props.data;\r\n\r\n  const buttonClicked = (page) => {\r\n    window.open(page, \"_blank\");\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cardWrapper\"\r\n      style={{\r\n        display: \"flex\",\r\n        /* flexDirection: \"column\", */\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\",\r\n        /* alignItems: \"center\", */\r\n        /* alignContent: \"flex-start\", */\r\n      }}>\r\n      {props.data &&\r\n        props.data.map((data, index) => {\r\n          return (\r\n            <Card key={index} id={index} className={classes.root}>\r\n              <CardActionArea\r\n                id={index}\r\n                key={index}\r\n                onClick={(e) => {\r\n                  setId(e.currentTarget.id);\r\n                  console.log(id);\r\n                  handleOpen();\r\n                }}\r\n                style={{\r\n                  height: \"90%\",\r\n                }}>\r\n                <CardContent\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"flex-end\",\r\n                  }}>\r\n                  <img\r\n                    src={\r\n                      data.show.image\r\n                        ? `${data.show.image.medium}`\r\n                        : \"https://s3.amazonaws.com/FringeBucket/image_placeholder.png\"\r\n                    }\r\n                    alt=\"cover art\"\r\n                    style={{ width: \"90%\", margin: \"auto\" }}\r\n                  />\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {data.show.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {data.show.summary\r\n                      ? data.show.summary.replaceAll(/( |<([^>]+)>)/gi, \" \")\r\n                      : \"No summary\"}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <Button\r\n                className={classes.root}\r\n                variant=\"outlined\"\r\n                startIcon={<TheatersIcon />}\r\n                onClick={() => buttonClicked(`${data.show.url}`)}>\r\n                More\r\n              </Button>\r\n            </Card>\r\n          );\r\n        })}\r\n      {propsData && (\r\n        <TransitionModal open={open} setOpen={setOpen} data={propsData} id={id} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { GridList } from \"./components/GridList\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n        console.log(data);\r\n      });\r\n  }, [url]);\r\n\r\n  function searchFn() {\r\n    setUrl(`https://api.tvmaze.com/search/shows?q=${search}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search for something\"\r\n          name=\"search\"\r\n          id=\"s\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              searchFn();\r\n            }\r\n          }}\r\n        />\r\n\r\n        <div className=\"button\" id=\"b\" onClick={() => searchFn()}>\r\n          SEARCH\r\n        </div>\r\n      </div>\r\n      {data ? <GridList data={data} /> : \"No such movie\"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}